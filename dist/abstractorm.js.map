{"version":3,"sources":["webpack://abstractorm/webpack/universalModuleDefinition","webpack://abstractorm/webpack/bootstrap","webpack://abstractorm/./src/utils/validateOptions.js","webpack://abstractorm/./src/TableBuilder.js","webpack://abstractorm/./src/adapters/electronIPCAdapter.js","webpack://abstractorm/./src/adapters/webSQLAdapter.js","webpack://abstractorm/./src/adapters/dummyAdapter.js","webpack://abstractorm/./src/AbstractORM.js","webpack://abstractorm/./src/utils/electronMainIPC.js","webpack://abstractorm/./src/index.js","webpack://abstractorm/external \"electron\""],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default_options","adapter","utils_validateOptions","input_options","context","setAdapter","src_TableBuilder","TableBuilder","table","signal","this","pre_query","query","post_query","count","column","select","columns","increment","id","exec","decrement","where","attrs","processAttrs","whereIn","join","result","keys","forEach","key","bool","string","push","create","createSQL","update","updateSQL","delete","deleteSQL","delete_query","findAll","sql","toSQL","electronIPCAdapter_ipcRenderer","ipcRenderer","UUID","replace","Math","random","toString","Promise","resolve","uuid","send","once","event","runSQL","code","electronIPCAdapter","Error","webSQLAdapter_createSQL","webSQLAdapter_runSQL","webSQLAdapter_updateSQL","map","castAttributes","webSQLAdapter_deleteSQL","reject","openDatabase","db","transaction","tx","executeSql","webSQLAdapter","voidFn","console","log","args","dummyAdapter","given","errorAdapterNotDefined","src_AbstractORM","[object Object]","options","models","tables","Array","isArray","instance","schema","target","assign","electronMainIPC","ipcMain","knex","on","raw","then","sender","catch","error","insert","del","__webpack_exports__","opts","require"],"mappings":"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","file":"abstractorm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"abstractorm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"abstractorm\"] = factory();\n\telse\n\t\troot[\"abstractorm\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const default_options = {\n  adapter: 'electronIPC'\n};\n\nconst validateOptions = (input_options = default_options, context) => {\n  if (input_options.adapter) {\n    context.setAdapter(input_options.adapter);\n  }\n};\n\nexport default validateOptions;","const TableBuilder = (function () {\n  function TableBuilder(table, signal) {\n    this.table = table;\n    this.signal = signal;\n    this.pre_query = '';\n    this.query = '';\n    this.post_query = '';\n    return this;\n  }\n\n  TableBuilder.prototype.count = function (column) {\n    if (column == null) {\n      column = 'id';\n    }\n    this.pre_query = `select count(${column}) from ${this.table} `;\n    return this;\n  };\n\n  TableBuilder.prototype.select = function (columns) {\n    if (columns == null) {\n      columns = '*';\n    }\n    this.pre_query = `select ${columns} from ${this.table} `;\n    return this;\n  };\n\n  TableBuilder.prototype.increment = function (id, column, value) {\n    if (value == null) {\n      value = 1;\n    }\n    this.pre_query = `update ${this.table} set ${column} = ${column} + ${value} where id = ${id}`;\n    return this.exec();\n  };\n\n  TableBuilder.prototype.decrement = function (id, column, value) {\n    if (value == null) {\n      value = 1;\n    }\n    this.pre_query = `update ${this.table} set ${column} = ${column} - ${value} where id = ${id}`;\n    return this.exec();\n  };\n\n  TableBuilder.prototype.where = function (attrs) {\n    if (this.pre_query === '') {\n      this.select();\n    }\n    this.query = `where ${this.processAttrs(attrs)}`;\n    return this;\n  };\n\n  TableBuilder.prototype.whereIn = function (column, value) {\n    if (this.pre_query === '') {\n      this.select();\n    }\n    this.query = `where ${column} IN (${value.join(',')})`;\n    return this;\n  };\n\n  TableBuilder.prototype.processAttrs = function (attrs) {\n    let result;\n    result = [];\n    Object.keys(attrs).forEach((key) => {\n      let bool,\n        string,\n        value;\n      value = attrs[key];\n      if (typeof value === 'function') {\n        string = value();\n        result.push(` ${key} ${value} `);\n      }\n      if (typeof value === 'string') {\n        result.push(` ${key} = '${value}' `);\n      }\n      if (typeof value === 'boolean') {\n        if (value === true) {\n          bool = 1;\n        } else {\n          bool = 0;\n        }\n        result.push(` ${key} = ${bool} `);\n      }\n      if (typeof value === 'number') {\n        return result.push(` ${key} = ${value} `);\n      }\n    });\n    return result.join(' and ');\n  };\n\n  TableBuilder.prototype.get = function (id) {\n    this.where({\n      id\n    });\n    return this.exec();\n  };\n\n  TableBuilder.prototype.create = function (attrs) {\n    return this.signal.createSQL(this.table, attrs);\n  };\n\n  TableBuilder.prototype.update = function (id, attrs) {\n    return this.signal.updateSQL(this.table, id, attrs);\n  };\n\n  TableBuilder.prototype.delete = function (id) {\n    return this.signal.deleteSQL(this.table, id);\n  };\n\n  TableBuilder.prototype.delete_query = function () {\n    this.pre_query = `delete from ${this.table} `;\n    return this;\n  };\n\n  TableBuilder.prototype.findAll = function () {\n    this.pre_query = `select * from ${this.table} `;\n    return this.exec();\n  };\n\n  TableBuilder.prototype.exec = function () {\n    this.sql = this.pre_query + this.query + this.post_query;\n    return this.signal.sql(this.sql);\n  };\n\n  TableBuilder.prototype.toSQL = function () {\n    return `${this.pre_query}${this.query}${this.post_query}`;\n  };\n\n  return TableBuilder;\n}());\n\nexport default TableBuilder;\n","const ipcRenderer = require('electron').ipcRenderer;\n\nconst errorNotDefined = 'Electron ipcRenderer is not defined.';\n\nconst UUID = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\nconst createSQL = (table, attrs) => new Promise((resolve) => {\n  const uuid = UUID();\n  ipcRenderer.send('insert_sql', table, attrs, uuid);\n  ipcRenderer.once(`insert_sql${uuid}`, (event, result) => resolve(result));\n});\n\nconst updateSQL = (table, id, attrs) => new Promise((resolve) => {\n  const uuid = UUID();\n  ipcRenderer.send('update_sql', table, id, attrs, uuid);\n  ipcRenderer.once(`update_sql${uuid}`, (event, result) => resolve(result));\n});\n\nconst deleteSQL = (table, id) => new Promise((resolve) => {\n  const uuid = UUID();\n  ipcRenderer.send('delete_sql', table, id, uuid);\n  ipcRenderer.once(`delete_sql${uuid}`, (event, result) => resolve(result));\n});\n\nconst runSQL = (code) => new Promise((resolve) => {\n  const uuid = UUID();\n  ipcRenderer.send('sql', code, uuid);\n  ipcRenderer.once(`sql${uuid}`, (event, result) => resolve(result));\n});\n\nconst adapter = (context) => {\n  if (ipcRenderer) {\n    context.createSQL = createSQL;\n    context.updateSQL = updateSQL;\n    context.deleteSQL = deleteSQL;\n    context.sql = runSQL;\n  } else {\n    throw(new Error(errorNotDefined));\n  }\n  return context;\n};\n\nexport default adapter;","// experimental adapter for testing purposes\n\nconst errorNotDefined = 'WebSQL is not present';\n\nconst castAttributes = (attrs) => {\n  const result = [];\n  Object.keys(attrs).map((key) => {\n    result.push(`${key} = ${attrs[key]}`);\n  });\n  return result.join(',');\n};\n\nconst createSQL = (table, attrs) => runSQL(`INSERT INTO ${table} VALUES (${attrs.join(',')});`);\nconst updateSQL = (table, id, attrs) => runSQL(`UPDATE ${table} SET ${castAttributes(attrs)} WHERE id = ${id};`);\nconst deleteSQL = (table, id) => runSQL(`DELETE FROM ${table} WHERE id = ${id};`);\nconst runSQL = (code) => new Promise((resolve, reject) => {\n  if (window.openDatabase) {\n    window.openDatabase(\"test_db\", \"\", \"Web SQL Database\", 200000);\n    const result = db.transaction((tx) => {\n      tx.executeSql(code);\n    });\n    resolve(result);\n  } else {\n    reject(new Error(errorNotDefined));\n  }\n});\n\nconst adapter = (context) => {\n  if (ipcRenderer) {\n    context.createSQL = createSQL;\n    context.updateSQL = updateSQL;\n    context.deleteSQL = deleteSQL;\n    context.sql = runSQL;\n  } else {\n    throw(new Error(errorNotDefined));\n  }\n  return context;\n};\n\nexport default adapter;","const voidFn = () => console.log(args);\n\nconst adapter = (given) => {\n  context.createSQL = voidFn;\n  context.updateSQL = voidFn;\n  context.deleteSQL = voidFn;\n  context.sql = voidFn;\n};\n\nexport default adapter;","import validateOptions from './utils/validateOptions';\nimport TableBuilder from './TableBuilder';\nimport electronIPCAdapter from './adapters/electronIPCAdapter';\nimport webSQLAdapter from './adapters/webSQLAdapter';\nimport dummyAdapter from './adapters/dummyAdapter';\n\nconst errorAdapterNotDefined = 'Adapter is not defined';\n\nclass AbstractORM {\n  constructor(options) {\n    validateOptions(options, this);\n    this.models = [];\n  }\n  // Pass models as import combined object\n  loadModels(models) {\n    this.models = models;\n    return this;\n  }\n  // Pass tables as array\n  loadTables(tables) {\n    const models = this.models; // link\n    const signal = this.adapter;\n    if (Array.isArray(tables)){\n      tables.map((table) => {\n        let instance = new TableBuilder(table, signal);\n        models[table] = instance;\n        return instance;\n      });\n    } else {\n      throw(new Error(`Tables argument should be array, example: [\\'notes\\',\\'comments\\']. Given: ${tables}`));\n    }\n    return this;\n  }\n  // Pass JSON-schema \n  loadSchema(schema) {\n\n  }\n  // Inject into target\n  inject(target) {\n    Object.assign(target, this.models);\n    return this;\n  }\n  // Set adapter as model's call site\n  setAdapter(adapter) {\n    switch (adapter) {\n      case \"electronIPC\":\n        electronIPCAdapter(this);\n        break;\n      case \"websql\":\n        webSQLAdapter(this);\n        break;\n      case \"dummy\":\n        dummyAdapter(this);\n        break;\n      default:\n        throw(new Error(errorAdapterNotDefined));\n        break;\n    }\n    return this;\n  }\n}\n\nexport default AbstractORM;","export default function(ipcMain, knex, log) {\n  ipcMain.on('sql', (event, code, uuid) => {\n    knex.raw(code).then((result) => {\n      event.sender.send(`sql${uuid}`, result);\n      return result;\n    }).catch((error) => {\n      log.error(error);\n      log.error(code);\n      event.sender.send(`sql${uuid}`, []);\n    });\n  });\n\n  ipcMain.on('insert_sql', (event, table, attrs, uuid) => {\n    knex(table).insert(attrs).then((result) => {\n      event.sender.send(`insert_sql${uuid}`, result);\n      return result;\n    }).catch((error) => {\n      log.error(error);\n      event.sender.send(`insert_sql${uuid}`, []);\n    });\n  });\n\n  ipcMain.on('update_sql', (event, table, id, attrs, uuid) => {\n    knex(table).where({ id }).update(attrs)\n      .then((result) => {\n        event.sender.send(`update_sql${uuid}`, result);\n        return result;\n      })\n      .catch((error) => {\n        log.error(error);\n        event.sender.send(`update_sql${uuid}`, []);\n      });\n  });\n\n  ipcMain.on('delete_sql', (event, table, id, uuid) => {\n    knex(table).where({ id }).del()\n      .then((result) => {\n        event.sender.send(`delete_sql${uuid}`, result);\n        return result;\n      })\n      .catch((error) => {\n        log.error(error);\n        event.sender.send(`delete_sql${uuid}`, []);\n      });\n  });\n}","import AbstractORM from './AbstractORM';\nimport electronMainIPC from './utils/electronMainIPC';\n// import connectModel from './connectModel';\n\nexport default function(opts) {\n  return new AbstractORM(opts);\n};\nexport { electronMainIPC };","module.exports = require(\"electron\");"],"sourceRoot":""}